CHIP ALU {
    IN  
        x[16], y[16],          
        zx, 
        nx, 
        zy, 
        ny, 
        f,  
        no; 

    OUT 
        out[16], 
        zr, 
        ng; 

    PARTS:
    Mux16(a=x, b=false, sel=zx, out=xfirst);
    Not16(in=xfirst, out=notX);
    Mux16(a=xfirst, b=notX, sel=nx, out=xsecond);

    
    Mux16(a=y, b=false, sel=zy, out=yfirst);
    Not16(in=yfirst, out=notY);
    Mux16(a=yfirst, b=notY, sel=ny, out=ysecond);

    
    Add16(a=xsecond, b=ysecond, out=fsum);
    And16(a=xsecond, b=ysecond, out=fand);
    Mux16(a=fand, b=fsum, sel=f, out=fout);

  
    Not16(in=fout, out=notfout);
    Mux16(a=fout, b=notfout, sel=no, out=out, out[0..7]=outOne, out[8..15]=outTwo, out[15]=outThree);

    
    Or8Way(in=outOne, out=positiveOne);
    Or8Way(in=outTwo, out=positiveTwo);
    Or(a=positiveOne, b=positiveTwo, out=positiveResult);
    Not(in=positiveResult, out=isZero);
    And(a=isZero, b=true, out=zr);

   
    And(a=outThree, b=true, out=ng);
}
